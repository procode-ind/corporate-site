---
import type { Locale } from '../i18n';
import { t } from '../i18n';

interface Props {
  lang?: Locale;
  className?: string; // Additional CSS classes for the section
}

const { lang = 'es', className = '' } = Astro.props as Props;

// Services data structure for easier maintenance
const services = [
  {
    key: 'beera',
    icon: '/beera-no-bg.png',
    type: 'image',
  },
  {
    key: 'starpos',
    icon: '/starpos-no-bg.png',
    type: 'image',
  },
  {
    key: 'lami',
    icon: '/lami-no-bg.png',
    type: 'image',
  },
  {
    key: 'klipgen',
    icon: 'ðŸŽ¬',
    type: 'emoji',
  },
] as const;

// Construct section classes
const sectionClasses = `mx-auto max-w-6xl px-4 py-16 ${className}`.trim();
---

<section class={sectionClasses}>
  <h2 class="mb-8 text-center text-3xl font-extrabold tracking-tight text-white">
    {t(lang, 'services.title')}
  </h2>
  <div class="grid gap-6 md:grid-cols-4">
    {
      services.map((service) => (
        <div class="card p-6 transition-all duration-300 hover:scale-105 hover:bg-white/10">
          <div class="mb-3 flex items-center gap-3">
            {service.type === 'image' ? (
              <img
                src={service.icon}
                alt={`${service.key} logo`}
                class="h-8 w-8 object-contain"
                loading="lazy"
              />
            ) : (
              <span class="text-2xl" role="img" aria-hidden="true">
                {service.icon}
              </span>
            )}
            <h3 class="text-xl font-semibold text-white">
              {t(lang, `services.${service.key}.title`)}
            </h3>
          </div>
          <p class="leading-relaxed text-white/80">{t(lang, `services.${service.key}.desc`)}</p>
        </div>
      ))
    }
  </div>
</section>
